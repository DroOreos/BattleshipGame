import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.NodeOrientation;
import javafx.scene.Node;
import javafx.scene.Scene;
import javafx.scene.control.MenuBar;
import javafx.scene.control.Menu;
import javafx.scene.control.MenuItem;
import javafx.scene.control.RadioMenuItem;
import javafx.scene.control.ToggleGroup;
import javafx.scene.layout.BorderPane;
import javafx.stage.Stage;


import model.theBattleShipGame;
//import 

public class BattleShipGUI extends Application {
	private MenuBar menuBar;
	private Menu optionsMenu;
	private Menu strategiesMenu;
	private MenuItem newGame;
	private MenuItem randomAI;
	private MenuItem hardAI;
	theBattleShipGame theGame;
	
	public static void main(String[] args) { launch(args); }
	
	//private BattleShipGame theGame;
	private BorderPane window = new BorderPane();
	public static final int width = 700;
	public static final int height = 700;
	public Scene scene= new Scene(window, width, height);

	@Override
	public void start(Stage stage) {
		stage.setTitle("BATTLESHIP");
		menuBar = new MenuBar();
		optionsMenu = new Menu("Options");
		strategiesMenu = new Menu("Strategies");
		newGame = new MenuItem("New Game");
		randomAI = new MenuItem("Random AI");
		hardAI = new MenuItem("Hard AI");
		
		theGame = new theBattleShipGame();
		BattleShipView battleShipView = new BattleShipView(theGame);
		BattleShipListeners listeners = new BattleShipListeners(scene,battleShipView.getPlayerBoardCanvas(),battleShipView.getOpponentBoardCanvas(),theGame);
		listeners.handlers();

		//theGame.addObserver();


		window.setCenter(battleShipView);
		//optionsMenu.getItems().addAll(new)
		
		strategiesMenu.getItems().addAll(randomAI, hardAI);
		optionsMenu.getItems().addAll(newGame, strategiesMenu);
		menuBar.getMenus().addAll(optionsMenu);
		window.setTop(menuBar);

		stage.setScene(scene);
		stage.show();
		
	}

	private class NewGameHandler implements EventHandler<ActionEvent>{
		@Override
		public void handle(ActionEvent event){
			//theGame.initializeBattleShipBoard();
			theGame = new theBattleShipGame();
		}
	}

	private class RandomAIHandler implements EventHandler<ActionEvent>{
		@Override
		public void handle(ActionEvent event){
			//TODO: implement AI (Chris)
		}
	}

	private class HardAIHandler implements EventHandler<ActionEvent>{
		@Override
		public void handle(ActionEvent event){
			//TODO: implement AI (Chris)
		}
	}

}